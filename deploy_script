#!/bin/bash

VUE_APP_NAME=vueapp 
PROJECT_NAME=project
APP_NAME=app

REPO_NAME=deploy-test
USER_NAME=djstein
GITHUB_REPO=https://github.com/$USER_NAME/$REPO_NAME.git

FULL_PATH=$PWD
CURRENT_DIR=${PWD##*/} 

function create_vue_app {
    set -x #echo on
    cd $PROJECT_NAME
    npm install -g vue-cli
    npm install -g npm-check-updates
    yes "" |  vue init webpack $VUE_APP_NAME
    cd vueapp
    npm-check-updates -u
    npm install
    npm run build
    cd ..
    set -x
}

function create_virtualenv {
    set -x #echo on
    virtualenv -p python3 venv
    set -x
}

function activate_virtualenv {
    source $FULL_PATH/venv/bin/activate
}

function create_requirements {
cat << EOF > requirements.txt
Django
EOF
}

function install_requirements {
    pip install --upgrade pip
    pip install -Ur requirements.txt
}

function create_django_project {
    django-admin startproject $PROJECT_NAME
    mv ./requirements.txt $PROJECT_NAME
}

function create_django_app {
    cd $PROJECT_NAME
    python  manage.py startapp $APP_NAME
}

function update_requirements {
cat << FOE >> $FULL_PATH/$PROJECT_NAME/requirements.txt
django-webpack-loader
gunicorn
Whitenoise
FOE
    pip install -Ur $FULL_PATH/$PROJECT_NAME/requirements.txt
}

function create_settings_deploy {
cat << EOF > $FULL_PATH/$PROJECT_NAME/$PROJECT_NAME/settings_deploy.py
from project.settings import INSTALLED_APPS, ALLOWED_HOSTS

INSTALLED_APPS.append( 'webpack_loader',)
INSTALLED_APPS.append( 'app',)

ALLOWED_HOSTS.append('*',)
EOF

cat << FOE >> $FULL_PATH/$PROJECT_NAME/$PROJECT_NAME/settings.py

try:
    from project.settings_deploy import *
except ImportError:
    pass
FOE
}

function create_webpack_settings {
cat << FOE >> $FULL_PATH/$PROJECT_NAME/$PROJECT_NAME/settings_deploy.py

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'static/',
        'STATS_FILE': os.path.join(BASE_DIR, 'vueapp', 'webpack-stats.json')
    }
}
FOE
}

function setup_s2i_gunicorn {
    cd $FULL_PATH/$PROJECT_NAME
    mkdir .s2i
cat << EOF > $FULL_PATH/$PROJECT_NAME/.s2i/environment
APP_MODULE=project.wsgi
APP_CONFIG=config.py
DISABLE_MIGRATE=1
EOF
    
    cd $FULL_PATH/$PROJECT_NAME
cat << EOF > $FULL_PATH/$PROJECT_NAME/config.py
import os

workers = int(os.environ.get('GUNICORN_PROCESSES', '3'))
threads = int(os.environ.get('GUNICORN_THREADS', '1'))

forwarded_allow_ips = '*'
secure_scheme_headers = { 'X-Forwarded-Proto': 'https' }
EOF
}

function upload_github {
    cd $FULL_PATH/$PROJECT_NAME
    curl -u $USER_NAME https://api.github.com/user/repos -d "{\"name\":\"$REPO_NAME\"}"
    cp $FULL_PATH/.gitignore .
    git init
    git remote add origin $GITHUB_REPO
    git add .
    git commit -m "Initial Commit"
    git push -u origin master
    
    # Sync git repos when multiple gits are in a directory / subdirectory
    git submodule sync
    git submodule update
}

function deploy_openshift {
    # oc new-project $PROJECT_NAME --description=$DESCRIPTION --display-name=$DISPLAY_NAME
    oc new-app $GITHUB_REPO python:latest
}

# create_virtualenv
activate_virtualenv
create_requirements
install_requirements
create_django_project
create_django_app
# create_vue_app
update_requirements
create_settings_deploy
# create_webpack_settings
setup_s2i_gunicorn
upload_github
deploy_openshift

exit;